extend = "../scripts/cargo-helpers.toml"

[tasks.all]
workspace = false
dependencies = [ "logic", "graphics" ]

[tasks.format]
workspace = false
command = "cargo"
args = [ "fmt", "--all" ]

[tasks.logic]
workspace = false
env = { CARGO_TARGET_DIR = "../target/logic", CRATE = "logic" }
script = [
  "cargo make crate-build wasm-logic",
  "cargo make wasm logic",
]

[tasks.graphics]
workspace = false
env = { CARGO_TARGET_DIR = "../target/graphics", CRATE = "graphics" }
script = [
  "cargo make crate-build wasm-graphics",
  "cargo make wasm graphics",
]

[tasks.crate-build]
workspace = false
condition = { env_set = [ "CARGO_TARGET_DIR" ] }
env = { MEM_GEN = "${PWD}/gen/", RUSTFLAGS = "-Clink-arg=--stack-first -Clink-arg=--no-entry -Clink-arg=--allow-undefined -Clink-arg=--strip-all -Clink-arg=--export-dynamic -Clink-arg=--import-memory -Clink-arg=--shared-memory  -Clink-arg=--threads  -Clink-arg=--export=__wasm_init_memory -Clink-arg=--no-check-features -Clink-arg=--export=__wasm_init_tls -Clink-arg=--export=__tls_size -Ctarget-feature=+atomics,+bulk-memory" }
script = [
	"mkdir -p gen",
	"touch shared/build.rs #triggers the build.rs to be rebuild every time",
	"rustc gen_mem_layout.rs -o gen/gen_mem_layout",
	"MEMORY_LAYOUT_PARAMETERS=$(gen/gen_mem_layout)",
	"RUSTFLAGS=$RUSTFLAGS$(cat ${MEM_GEN}/mem.conf)",
	"echo $RUSTFLAGS",
	"echo $MEMORY_LAYOUT_PARAMETERS",
	"MEMORY_LAYOUT_PARAMETERS=$MEMORY_LAYOUT_PARAMETERS RUSTFLAGS=$RUSTFLAGS cargo make exec-${BUILD_ENV} -- build -p rask-${@} --target wasm32-unknown-unknown",
	"#mv $(find $CARGO_TARGET_DIR/ -name mem.json | tail -n 1) gen/",
]

# TODO cargo doesn't seem to have a post-build hook but it might be nice
# to determine if a rebuild happened (otherwise we don't need to rerun wasm-bindgen).
[tasks.wasm]
workspace = false
condition = { env_set = [ "CRATE" ] }
script = [
'''
#!/usr/bin/env bash -ex
top=$(git rev-parse --show-toplevel 2>/dev/null)
if [ $? -ne 0 ]; then
  echo "Not in a git repo!"
  exit 1
fi
file=$top/target/${CRATE}/wasm32-unknown-unknown/${BUILD_ENV}/rask_wasm_${@}.wasm
wasm-bindgen $file --out-dir $top/client/gen \
  --no-typescript \
  --target no-modules \
  --remove-producers-section \
  --remove-name-section \
  --no-demangle
wasm-opt $top/client/gen/rask_wasm_${@}_bg.wasm \
  --memory-packing --remove-unused-brs --enable-mutable-globals --enable-threads -Oz --enable-bulk-memory \
  -o $top/client/gen/${@}.wasm
rm $top/client/gen/rask_wasm_${@}_bg.wasm
mv $top/client/gen/rask_wasm_${@}.js $top/client/gen/${@}.js
'''
]

[tasks.disassemble]
workspace = false
script = [
'''
#!/usr/bin/env bash -e
top=$(git rev-parse --show-toplevel 2>/dev/null)
if [ $? -ne 0 ]; then
  echo "Not in a git repo!"
  exit 1
fi
wasm2wat --enable-threads -f --no-debug-names gen/${@}.wasm -o gen/${@}.wat --enable-bulk-memory
'''
]
