extend = "../scripts/cargo-helpers.toml"

[tasks.all]
workspace = false
dependencies = [ "wasm" ]

[tasks.format]
workspace = false
command = "cargo"
args = [ "fmt", "--all" ]

[tasks.wasm]
workspace = false
env = {RUSTFLAGS = "-Ctarget-feature=+atomics,+bulk-memory,+mutable-globals -Clink-arg=-zstacksize=131072 -Clink-arg=--demangle" }
script = [
'''
#!/usr/bin/env bash -ex
top=$(git rev-parse --show-toplevel 2>/dev/null)
if [ $? -ne 0 ]; then
  echo "Not in a git repo!"
  exit 1
fi
gen=$top/wasm/gen
cargo make exec-${BUILD_ENV} -- build -p rask-wasm --target wasm32-unknown-unknown -Z build-std=std,panic_abort
file=$top/target/rask_wasm/wasm32-unknown-unknown/${BUILD_ENV}/rask_wasm.wasm
mkdir -p $gen
#mv $file $gen/client.wasm
wasm-dis $file -o /dev/stdout --detect-features | sed 's/call \$llvm.wasm.atomic.wait.i32/memory.atomic.wait32/g;s/call \$llvm.wasm.atomic.notify/memory.atomic.notify/g;s/^.*llvm.wasm.atomic.*$//g' > /tmp/tmp.wat
wasm-as /tmp/tmp.wat -o $gen/client.wasm --detect-features --enable-bulk-memory --enable-bulk-memory --enable-mutable-globals --enable-threads
rm /tmp/tmp.wat
sed "/pub/{ s/pub//; s/:\s*u32//}" $top/rask-engine/src/network/protocol/op_codes.rs > $gen/main.js
cat $top/wasm/scripts/main.js >> $gen/main.js
'''
]
