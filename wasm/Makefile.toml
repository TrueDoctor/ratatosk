extend = "../scripts/cargo-helpers.toml"

[tasks.all]
workspace = false
dependencies = [ "crate-build", "wasm" ]

[tasks.format]
workspace = false
command = "cargo"
args = [ "fmt", "--all" ]

[tasks.crate-build]
workspace = false
env = { CARGO_TARGET_DIR = "../target/rask_wasm", MEM_GEN = "${PWD}/gen/", RUSTFLAGS = " -Ctarget-feature=+atomics,+bulk-memory" }
script = [
	"mkdir -p gen",
	"#touch shared/build.rs #triggers the build.rs to be rebuild every time",
	"#rustc gen_mem_layout.rs -o gen/gen_mem_layout",
	"#MEMORY_LAYOUT_PARAMETERS=$(gen/gen_mem_layout)",
	"#RUSTFLAGS=\"$RUSTFLAGS $(cat ${MEM_GEN}/mem.conf)\"",
	"#echo $RUSTFLAGS",
	"#echo $MEMORY_LAYOUT_PARAMETERS",
	"#echo \"export MEMORY_LAYOUT_PARAMETERS=\\\"${MEMORY_LAYOUT_PARAMETERS}\\\"\" > gen/mem.sh",
	"#. gen/mem.sh",
	"cargo make exec-${BUILD_ENV} -- build -p rask-wasm --target wasm32-unknown-unknown -Z build-std=std,panic_abort",

]

# TODO cargo doesn't seem to have a post-build hook but it might be nice
# to determine if a rebuild happened (otherwise we don't need to rerun wasm-bindgen).
[tasks.wasm]
workspace = false
script = [
'''
#!/usr/bin/env bash -ex
top=$(git rev-parse --show-toplevel 2>/dev/null)
if [ $? -ne 0 ]; then
  echo "Not in a git repo!"
  exit 1
fi
file=$top/target/rask_wasm/wasm32-unknown-unknown/${BUILD_ENV}/rask_wasm.wasm
wasm-bindgen $file --out-dir $top/wasm/gen \
  --no-typescript \
  --keep-debug \
  --target no-modules #\
#  --remove-producers-section \
mv $top/wasm/gen/rask_wasm_bg.wasm $top/wasm/gen/client.wasm
mv $top/wasm/gen/rask_wasm.js $top/wasm/gen/client.js
'''
]

[tasks.disassemble]
workspace = false
script = [
'''
#!/usr/bin/env bash -e
top=$(git rev-parse --show-toplevel 2>/dev/null)
if [ $? -ne 0 ]; then
  echo "Not in a git repo!"
  exit 1
fi
wasm2wat --enable-threads -f --no-debug-names gen/${@}.wasm -o gen/${@}.wat --enable-bulk-memory
'''
]
